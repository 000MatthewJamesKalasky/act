[0] Clone: addone<>
   arg 0: farg_0
   ret is: fret_0
[0] === chp ===
   w:=0;*[w<2 -> self:=x+1;w:=w+1]
[0] ===

[1] Clone: addone<>
   arg 0: farg_0
   ret is: fret_0
[1] === chp ===
   w:=0
[1] ===


[1] === returning ===
   floc_0:=0
[1] ==========

[1] Clone: addone<>
   arg 0: farg_0
   ret is: fret_0
[1] === chp ===
   *[w<2 -> self:=x+1;w:=w+1]
[1] ===

[2] Clone: addone<>
   arg 0: farg_0
   ret is: fret_0
[2] === chp ===
   self:=x+1;w:=w+1
[2] ===

[3] Clone: addone<>
   arg 0: farg_0
   ret is: fret_0
[3] === chp ===
   self:=x+1
[3] ===


[3] === returning ===
   fret_0:=farg_0+0
[3] ==========

[3] Clone: addone<>
   arg 0: farg_0
   ret is: fret_0
[3] === chp ===
   w:=w+1
[3] ===


[3] === returning ===
   floc_0:=floc_0+0
[3] ==========


[2] === returning ===
   fret_0:=farg_0+0;floc_0:=floc_0+0
[2] ==========


[1] === returning ===
   *[floc_0<0 -> fret_0:=farg_0+0;floc_0:=floc_0+0]
[1] ==========


[0] === returning ===
   floc_0:=0;*[floc_0<0 -> fret_0:=farg_0+0;floc_0:=floc_0+0]
[0] ==========

[0] Clone: addone<>
   arg 0: farg_0
   ret is: fret_0
[0] === chp ===
   w:=0;*[w<2 -> self:=x+1;w:=w+1]
[0] ===

[1] Clone: addone<>
   arg 0: farg_0
   ret is: fret_0
[1] === chp ===
   w:=0
[1] ===


[1] === returning ===
   floc_0:=0
[1] ==========

[1] Clone: addone<>
   arg 0: farg_0
   ret is: fret_0
[1] === chp ===
   *[w<2 -> self:=x+1;w:=w+1]
[1] ===

[2] Clone: addone<>
   arg 0: farg_0
   ret is: fret_0
[2] === chp ===
   self:=x+1;w:=w+1
[2] ===

[3] Clone: addone<>
   arg 0: farg_0
   ret is: fret_0
[3] === chp ===
   self:=x+1
[3] ===


[3] === returning ===
   fret_0:=farg_0+0
[3] ==========

[3] Clone: addone<>
   arg 0: farg_0
   ret is: fret_0
[3] === chp ===
   w:=w+1
[3] ===


[3] === returning ===
   floc_0:=floc_0+0
[3] ==========


[2] === returning ===
   fret_0:=farg_0+0;floc_0:=floc_0+0
[2] ==========


[1] === returning ===
   *[floc_0<0 -> fret_0:=farg_0+0;floc_0:=floc_0+0]
[1] ==========


[0] === returning ===
   floc_0:=0;*[floc_0<0 -> fret_0:=farg_0+0;floc_0:=floc_0+0]
[0] ==========

defproc test ();
function addone (int<32> x) : int<32>;

defproc test ()
{

/* instances */
int<32> fuse_1;
int<32> fuse_0;
int<32> farg_0;
int<32> y;
int<32> x;
int<32> floc_0;
int<32> fret_0;

/* connections */
chp {
farg_0:=y;floc_0:=0;*[floc_0<0 -> fret_0:=farg_0+0;floc_0:=floc_0+0];fuse_0:=fret_0;farg_0:=y+1;floc_0:=0;*[floc_0<0 -> fret_0:=farg_0+0;floc_0:=floc_0+0];fuse_1:=fret_0;x:=fuse_0+fuse_1
}
}

function addone (int<32> x) : int<32>
{

/* instances */
int<32> w;

/* connections */
chp {
w:=0;*[w<2 -> self:=x+1;w:=w+1]
}
}


/* instances */
test t;

/* connections */
